//--------------------------------------------------------------------------------------------------
/**
 * @page Command API
 *
 * @ref command_interface.h "API Reference"
 *
 * Copyright (C) Rtone.
 */
//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------
/**
 * Command Types.
 */
//--------------------------------------------------------------------------------------------------
ENUM Type
{
    A, ///< Command type A
    B  ///< Command type B
};

//--------------------------------------------------------------------------------------------------
/**
 *  Reference type for a command.
 */
//--------------------------------------------------------------------------------------------------
REFERENCE Cmd;

//--------------------------------------------------------------------------------------------------
/**
 * This function created a command and register it.
 *
 * @return
 *      - Reference to the command.
 *      - NULL if an error occurs.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION Cmd Create
(
	Type cmdType IN ///< Command type.
);

//--------------------------------------------------------------------------------------------------
/**
 * This function deletes a command.
 *
 * @return
 *      - LE_OK            The function succeeded.
 *      - LE_FAULT         The function failed to delete the command.
 *      - LE_BUSY          Command is in progress.
 *
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t Delete
(
    Cmd commandRef IN   ///< Command reference
);

//--------------------------------------------------------------------------------------------------
/**
 * Handler for command processing.
 */
//--------------------------------------------------------------------------------------------------
HANDLER CommandHandler
(
    Cmd commandRef IN,    ///< Received command reference
    le_result_t result IN ///< Command result
);

//--------------------------------------------------------------------------------------------------
/**
 * Execute a commande.
 */
//--------------------------------------------------------------------------------------------------
FUNCTION le_result_t Execute
(
    Cmd commandRef IN  ///< Command reference
);

//--------------------------------------------------------------------------------------------------
/**
 * This event provides information when the command is detected.
 *
 */
//--------------------------------------------------------------------------------------------------
EVENT Command
(
    Cmd            commandRef   IN,   ///< Command reference
    CommandHandler handler      IN    ///< Handler to called when the command is detected
);
